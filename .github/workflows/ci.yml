# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.11.0]

    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 54321:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

    env:
      DATABASE_URL: postgresql://postgres:password@localhost:54321/postgres
      POSTGRES_PRISMA_URL: postgresql://postgres:password@localhost:54321/postgres?pgbouncer=true&connect_timeout=15
      POSTGRES_URL_NON_POOLING: postgresql://postgres:password@localhost:54321/postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PASSWORD: password
      POSTGRES_DATABASE: postgres

    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        run: npm run format:check

      - name: Generate Prisma files
        run: npm run db:generate

      - name: Build the project
        run: npm run build

      - name: Reset database with Prisma
        run: npx --workspace=@repo/database prisma migrate reset --skip-seed --force

      # Test suites. Not running in parallel because of the integration tests that require a database
      - run: npm run test:client
      - run: npm run test:api
      - run: npm run test:admin-client
      - run: npm run test:admin-api
      - run: npm run test:utils
      - run: npm run test:database
      - run: npm run test:types
      - run: npm run test:paginator
